#summary Mind High Level Architecture

@@[Home] -> [Architecture] -> [MindArchitecture]

<wiki:toc max_depth="3" />
----

== Object Model ==

==== Primary mind layers ====

  * mind target interface
   * MindTarget, MindSensor, MindEffector
   * MindSensorArea, MindEffectorArea
{{{
class MindTarget : Service {MindSensorSet, MindEffectorSet, MindSensorArea, MindEffectorArea}
    (class SpecificMindTarget : MindTarget)
class MindSensorSet {MindSensor[]}
class MindEffectorSet {MindEffector[]}
class MindSensor : MindRegion {NeuroVector}
    (class SpecificMindSensor : MindSensor)
class MindEffector : MindRegion
    (class SpecificMindEffector : MindEffector)
class MindSensorArea : MindArea
class MindEffectorArea : MindArea
}}}
  * mind service
   * MindService
{{{
class MindService : Service {MindSpace, MindMap, MindAreaSet, MindRegionSet, MindAreaLinkSet, MindActiveMemory}
}}}
  * mind area
   * MindArea
   * PerceptionArea, ParietalArea, PrefrontalCortexArea
   * ThalamusArea, HippocampusArea, BasalGangliaArea
   * BrainStemArea, CranialNerveArea
   * SpinalCordArea, MotorNerveArea
{{{
class MindArea {MindAreaInfo, MindRegionSet, MindRegionLinkSet}
    class ThalamusArea : MindArea
    class PerceptionArea : MindArea
    class HippocampusArea : MindArea
    class ParietalArea : MindArea
    class PrefrontalCortexArea : MindArea
    class BasalGangliaArea : MindArea
    class BrainStemArea : MindArea
    class SpinalCordArea : MindArea
    class BodyFeelingNerveArea : MindArea
    class CranialNerveArea : MindArea
    class MotorNerveArea : MindArea
class MindAreaSet {MindArea[]};
}}}
  * mind region
   * MindRegion
   * CortexRegion, NucleiRegion, NerveRegion
{{{
class MindRegion {NeuroNet, MindRegionLinkSet}
    class CortexRegion : MindRegion
    class NucleiRegion : MindRegion
    class NerveRegion : MindRegion
class MindRegionSet {MindRegion[]}
}}}
  * mind matter
   * NeuroVector, NeuroPool
   * NeuroLink, ExcitatoryLink, InhibitoryLink, ModulatoryLink
   * NeuroNet, CompactNet, SpreadNet
{{{
class NeuroVector;
class NeuroPool {NeuroVector[], NeuroVector}
class NeuroPoolSet {NeuroPool[]}
class NeuroLink {NeuroPool, NeuroPool}
    class ExcitatoryLink : NeuroLink
    class InhibitoryLink : NeuroLink
    class ModulatoryLink : NeuroLink
class NeuroLinkSet {NeuroLink[]}
class NeuroNet {NeuroPoolSet, NeuroLinkSet}
    class LayeredNet : NeuroNet
    class CompactNet : NeuroNet
    class SpreadNet : NeuroNet
}}}

==== Auxiliary mind objects ====

  * mind stream
   * MindAreaLink, MindRegionLink
   * MindActiveMemory, MindMessage
{{{
class MindAreaLink : MessageSubscriber {MindLinkInfo, MindArea, MindArea, MindRegionLinkSet}
class MindAreaLinkSet {MindAreaLink[]}
class MindRegionLink {MindRegion, MindRegion, NeuroLinkSet}
class MindRegionLinkSet {MindRegionLink[]}
class MindActiveMemory {NeuroLink[]};
class MindMessage : BinaryMessage
}}}
  * mind space
   * MindLocation, MindSpace
   * MindAreaInfo, MindAreaLinkInfo, MindMap
{{{
class MindLocation
class MindAreaInfo {MindLocation}
class MindAreaLinkInfo
class MindSpace {MindLocation[]}
class MindMap {MindAreaInfo[], MindAreaLinkInfo[]}
}}}
  * mind base
{{{
(low-level data types)
}}}