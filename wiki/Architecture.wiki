#summary High Level Architectural Design

@@[Home] -> [Architecture]

<wiki:toc max_depth="3" />
----

THIS PAGE IS A DRAFT

= High Level Architecture v3 =

== Overall Architecture ==

aHuman architecture is based on biological model.
See [BiologicalCortexModel].

http://ahuman.googlecode.com/svn/images/wiki/research/biomodel/top.jpg

aHuman framework contains below high-level modules:

|| *Module* || Name || *Implements* || *Notes* ||
|| ACTUATORS || aWee, aYou, aPets, aHuman || set of Sensors and Effectors for different targets || Can interact with external world; there can be different sets of actuators, aPets or aWee can be test/trial one for prototyping aHuman ||
|| MIND || mind || intelligence and feeling || in biological model includes brain, feeling components and all tracts ||
|| PLATFORM || platform || generic software application functions || contains library components shared across different aHuman executable targets or specific auxiliary executable targets ||
|| TOOLS || tools || generic auxiliary executables || using platform and libraries, multiple utilities combined in one executable, like cvs/svn/p4 ||
|| LIBRARY || library || ready-to-use libraries || can be project-generated library or external library; other modules are using only binaries and headers ||

Possible executables:

  * any actuators set, combined with MIND, PLATFORM and LIBRARY components
  * TOOLS combined with PLATFORM and LIBRARY components
  * executable LIBRARY components

Resulting high-level architecture model is below one:

http://ahuman.googlecode.com/svn/images/wiki/development/hla-v3.jpg

== MIND High Level Architecture ==

MIND is a sole part of aHuman and has its own layered HLA:

|| *Layer* || *Components* || *Implements* || *Notes* ||
|| MINDLIFECYCLE || lifecycle || mind modules, flows, module lifecycle || Handles mind birth, growth and wake/sleep cycle, geometry of mind ||
|| MINDAREA || neocortexarea, archicortexarea, nucleousprocessor, nucleousrelay, nervoussystem || mind modules - neocortex area, archicortex area, nucleous processor, nucleous relay, nervous system || Perception, motor, executive, feeling mind functions ||
|| MINDREGION || neocortexregion, archicortexregion, nucleiprocessorregion, nucleirelayregion, nervousbranch || neocortex region, archicortex region, nuclei, nervous branch || Processing patterns ||
|| MINDNEURONET || cortexneuronet, nucleousneuronet || neocortex, archicortex, nuclei || Effective execution of wide patterns, memorizing, learning ||

== Platform HLA ==

Platform contains multiple services and split on HLA level to components as well:

|| *Component* || *Implements* || *Depends on* ||
|| services || base types, plain and template classes, logging, exception handling, service and program lifecycle || - ||
|| environment || Handling environment, including configuring, deployed instance, operating system and other available resources || - ||
|| objects || Unified objects and object persistence, object types || - ||
|| math || Specific mathematical calculations || - ||
|| persisting || Persistence of memory in filesystem space || objects ||
|| threads || multi-threading environment, CPU management, performance monitoring || objects ||
|| messaging || Internal decoupling mechanism to arrange manageable numerous interactions among components || objects, threads ||
|| media || Communicating with external world using standard protocols with non-aHuman services or internal aHuman protocol with aHuman tools || objects, threads, messages ||
|| adminapi || API to access internal aHuman components and run tests or specific operations || objects, messaging || media ||
|| testing || Testing and debugging support || objects, messaging ||

== HLA State and Development ==

  * rates: 1-5

|| *Layer/Module* || *Design Rate* || *Code Rate* || *Advances and TBD* ||
|| MINDLIFECYCLE || 3 *focus* || 1 || *adv*: biomodel, *tbd*: layered architecture, transition to HLAv3 ||
|| MINDAREA || 2 *focus* || 1 || *adv*: cortex types, *tbd*: neocortex area design ||
|| MINDREGION || 2 *focus* || 1 *focus* || *adv*: HTM, reqs, features, *tbd*: complete neocortex region model ||
|| MINDNEURONET || 2 || 2 *focus* || *adv*: sourceforge cortex, fann, *tbd*: trial neocortex implementation ||
|| ACTUATORS || 2 *focus* || 2 *focus* || *adv*: unified sensor model, filesyswalker, *tbd*: overt and covert attention, digital-neural protocol ||
|| PLATFORM || 3 *focus* || 3 *focus* || *adv*: life cycle, *tbd*: component-based code, HLAv3 codebase ||
|| TOOLS || 2 || 2 || *adv*: aiconsole, *tbd*: - ||
|| LIBRARY || 2 || 2 || *adv*: opencortex, fann, genrtn, chat, opencv *tbd*: - ||

== Limitations ==

Feasibility Study gives us below limitations for aHuman design:

  * don't try to replicate human design
  * use high-quality model of NN with 1Kb memory per neuron
  * use NNs for personality areas and knowlets for others
  * use 500K neurons in operating memory (0.05% of HI)
  * use 30K focused neurons (6% of AI NNs)
  * develop knowlets as plug-ins
   * use up to 500M in operating memory for activated knowlets (0.5% of HI)
   * remaining inactive knowlets can use up to 100Gb disk space
  * separate feeling from emotions
  * treat feeling as internal motivation system
   * use broken Markov network as a "pain" body signal
   * use sensor data consumed to adjust Markov network as "feed" body signal
   * use expected action in Markov network as internal motivator
   * curiosity is exploration action in Markov network
   * derive new "uncertainty" body signal as mismatch between expected/suggested action and actual action
  * don't create Markov networks initially, create HMM factories to construct networks
  * create learning cycle based on body signals
   * construct body reward function from body signals
   * create system of feedback recognition, train it using body reward function
   * create feedback reward function as output of feedback recognition system
   * use feedback reward function to learn all active Markov networks

== Ideas inspired by coding ==

  * mind consists of mind areas
  * mind area consists of neural networks of various types
  * single AI component is responsible for specific area and defines how it is constructed from networks - shape, used network types, sizes and inter-area links
  * brain holds mind
  * brain defines how areas are connected
  * brain contains thread pool, executing elementary operations
  * elementary operation is either network input/output calculation or link walkthough
  * any operation leads to learning - either inside one network, or inside link
  * networks can be of small typical size - e.g. 300 neurons, and thread pool can be 100 threads executing their operations and then sleeping for a while
  * networks porcessed in the same time mean "mind focus"
  * after processing focus is changed

= Stale Models =

  * [ArchitectureModelInitial HLA version 1]
  * [ArchitectureModelV2 HLA version 2]