#summary High Level Architectural Design

@@[Home] -> [Architecture]

<wiki:toc max_depth="3" />
----

THIS PAGE IS A DRAFT

= High Level Architecture v3 =

== Overall Architecture ==

aHuman architecture is based on biological model.
See [BiologicalCortexModel].

http://ahuman.googlecode.com/svn/images/wiki/research/biomodel/top.jpg

aHuman framework contains below high-level modules:

|| *Module* || Name || *Implements* || *Notes* ||
|| ACTUATORS || aWeeActuators || set of Sensors and Effectors for aWee target || Can interact with external world; there can be different sets of actuators, aWeeActuators is test/trial one for prototyping aWee ||
|| MIND || aMind || intelligence and feeling || in biological model includes brain, feeling components and all tracts ||
|| PLATFORM || aPlatform || generic software application functions || contains library components shared across different aHuman executable targets or specific auxiliary executable targets ||
|| LIBRARY || aGreatLibrary || ready-to-use libraries or generic auxiliary executables || can be project-generated library or external library; other modules are using only binaries and headers ||

Possible executables:

  * any actuators set, combined with aMind, aPlatform and aGreatLibrary library components
  * executable aPlatform components combined with library components from aGreatLibrary
  * executable aGreatLibrary components

Resulting high-level architecture model is below one:

http://ahuman.googlecode.com/svn/images/wiki/development/hla-v3.jpg

== aMind High Level Architecture ==

aMind is a sole part of aHuman and has its own layered HLA:

|| *Layer* || *Name* || *Implements* || *Notes* ||
|| MINDLIFECYCLE || aMindLifeCycle || mind modules, flows, module lifecycle || Handles mind birth, growth and wake/sleep cycle, geometry of mind ||
|| MINDMODULE || aNeoCortexArea, aArchiCortexArea, aNucleousProcessor, aNucleousRelay, aNervousSystem || mind modules - neocortex area, archicortex area, nucleous processor, nucleous relay, nervous system || ||
|| MINDREGION || aNeoCortexRegion, aArchiCortexRegion, aNucleiProcessorRegion, aNucleiRelayRegion, aNervousBranch || neocortex region, archicortex region, nuclei, nervous branch || ||
|| MINDNEURONET || aCortexNeuroLibrary, aNucleousNeuroLibrary || implements neocortex, archicortex, nuclei || ||

== HLA State and Development ==

  * rates: 1-5

|| LAYER/MODULE || Design Rate || Code Rate || Advances and TBD ||
|| MINDLIFECYCLE || 3 *focus* || 1 || *adv*: biomodel, *tbd*: layered architecture, transition to HLAv3 ||
|| MINDMODULE || 2 *focus* || 1 || *adv*: cortex types, *tbd*: neocortex module design ||
|| MINDREGION || 2 *focus* || 1 *focus* || *adv*: HTM, reqs, features, *tbd*: complete neocortex region model ||
|| MINDNEURONET || 2 || || 2 *focus* || *adv*: sourceforge cortex, fann, *tbd*: trial neocortex implementation ||
|| ACTUATORS || 2 *focus* || 2 *focus* || *adv*: unified sensor model, filesyswalker, *tbd*: overt and covert attention, digital-neural protocol ||
|| PLATFORM || 3 *focus* || 3 *focus* || *adv*: life cicle, *tbd*: component-based code, HLAv3 codebase ||
|| LIBRARY || 2 || 2 || *adv*: opencortex, fann, genrtn, chat, opencv *tbd*: - ||

== Limitations ==

Feasibility Study gives us below limitations for aHuman design:

  * don't try to replicate human design
  * use high-quality model of NN with 1Kb memory per neuron
  * use NNs for personality areas and knowlets for others
  * use 500K neurons in operating memory (0.05% of HI)
  * use 30K focused neurons (6% of AI NNs)
  * develop knowlets as plug-ins
   * use up to 500M in operating memory for activated knowlets (0.5% of HI)
   * remaining inactive knowlets can use up to 100Gb disk space
  * separate feeling from emotions
  * treat feeling as internal motivation system
   * use broken Markov network as a "pain" body signal
   * use sensor data consumed to adjust Markov network as "feed" body signal
   * use expected action in Markov network as internal motivator
   * curiosity is exploration action in Markov network
   * derive new "uncertainty" body signal as mismatch between expected/suggested action and actual action
  * don't create Markov networks initially, create HMM factories to construct networks
  * create learning cycle based on body signals
   * construct body reward function from body signals
   * create system of feedback recognition, train it using body reward function
   * create feedback reward function as output of feedback recognition system
   * use feedback reward function to learn all active Markov networks

== Ideas inspired by coding ==

  * mind consists of mind areas
  * mind area consists of neural networks of various types
  * single AI component is responsible for specific area and defines how it is constructed from networks - shape, used network types, sizes and inter-area links
  * brain holds mind
  * brain defines how areas are connected
  * brain contains thread pool, executing elementary operations
  * elementary operation is either network input/output calculation or link walkthough
  * any operation leads to learning - either inside one network, or inside link
  * networks can be of small typical size - e.g. 300 neurons, and thread pool can be 100 threads executing their operations and then sleeping for a while
  * networks porcessed in the same time mean "mind focus"
  * after processing focus is changed

= Stale Models =

  * [ArchitectureModelInitial HLA version 1]
  * [ArchitectureModelV2 HLA version 2]