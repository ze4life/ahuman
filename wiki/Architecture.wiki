#summary High Level Architectural Design

@@[Home] -> [Architecture]

<wiki:toc max_depth="3" />
----

THIS PAGE IS A DRAFT

= Architecture models =

Up to the moment several models were created, addressing different sides.
Latest models include more enhanced understanding of subject area.

== Current understanding ==

Last findings:

Now the role and interrelationships of major scientific areas - Artificial Life, Artificial Intelligence, Cognition, Neurobiology - are quite clear and the design is based on:

  * Plausible compared to human - local connections, major components are based on human design
  * Design should allow using ordinary computer, not Blue Brain one
  * All design items on first level should be based on limitations and existing human design - no attempt to descend to certain final component model
  * Design should take into account priority of life features over intelligence features
  * Items should demonstrate ability to adopt to environment "by design"

http://ahuman.googlecode.com/svn/images/wiki/development/mindmap.jpg

*Major Diagram Features*:

  * Diagram is the same for biological human and for artificial life
  * Body is regarded as consisting of non-overlapping brain, physiology and biology parts
    * *physiology* - physiological part is not having any information processing, but serve for direct converting neural signals to musculus changes or transform light into eye signals (not including any pattern processing, capture only); in aHuman it can be created as hard-coded, non-adoptable software without loss of Artificial Life features
    * *biology* - non-brain biological part represents human component and subsystems, which implement human as biological being - reproductive system, feed subsystem, blood subsystem and others; in aHuman it has meaning only for functions that link brain and body - like metabolism, pain feedback
    * *brain* is a biological part intended to support mind operations; in aHuman it is represented by computer science solutions and algorithms based primarily on connectivists principles 
  * Mind on brain
   * mind is shown as cognition and intelligence functions, implemented on brain
   * several functions were identified by software model of brain

*Mapping To Human Body*:

http://ahuman.googlecode.com/svn/images/wiki/development/humanmind.jpg

== Function / Technology Map ==

|| *Module / Component Set* || *Technology* || *Candidate Technologies* || *Primary Function* || *Related Problems and Algorithms* ||
|| *modmedia* || || || || ||
|| sensors || || hardcoded || primary sensors to capture signal || chat reader, video-stream, signal processing ||
|| effectors || || hardcoded || emit signal || chat writer, primary feedback ||
|| *modcognition* || || || || ||
|| cortex || HTM || || primary cortex || ||
|| amex || || BAM/RBM || associative memory || inferior temporal cortex (ITC) ||
|| *modintelligence* || || || || ||
|| strategies || HMM || || rational behaviour || ||
|| motor || HMM || || effectors control || ||
|| *engine* || || || || ||
|| keeper || hardcoded || || startup sequence and component management || ||
|| db || hardcoded || || persistence services || ||
|| io || hardcoded || || internal communications || JMS/COM-style ||
|| *lib* || || || || ||
|| libgen || hardcoded || || low-level generic algorithms and data primitives || ||
|| libnn || || || neural networks of various types || ||
|| libbn || || HTM || belief networks || ||

== Limitations ==

Feasibility Study gives us below limitations for aHuman design:

  * don't try to replicate human design
  * use high-quality model of NN with 1Kb memory per neuron
  * use NNs for personality areas and knowlets for others
  * use 500K neurons in operating memory (0.05% of HI)
  * use 30K focused neurons (6% of AI NNs)
  * develop knowlets as plug-ins
   * use up to 500M in operating memory for activated knowlets (0.5% of HI)
   * remaining inactive knowlets can use up to 100Gb disk space
  * separate feeling from emotions
  * treat feeling as internal motivation system
   * use broken Markov network as a "pain" body signal
   * use sensor data consumed to adjust Markov network as "feed" body signal
   * use expected action in Markov network as internal motivator
   * curiosity is exploration action in Markov network
   * derive new "uncertainty" body signal as mismatch between expected/suggested action and actual action
  * don't create Markov networks initially, create HMM factories to construct networks
  * create learning cycle based on body signals
   * construct body reward function from body signals
   * create system of feedback recognition, train it using body reward function
   * create feedback reward function as output of feedback recognition system
   * use feedback reward function to learn all active Markov networks

= Stale Models =

  * [ArchitectureModelInitial Original Model]